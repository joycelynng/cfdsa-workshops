---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dov-deploy
  namespace: myns
  labels:
    app: dov
    name: dov-deploy
spec:
  replicas: 2
  selector:
    matchLabels: # specify pod labels to match for identification/ debugging
      app: dov
      name: dov-po
  template: # pod template
    metadata:
      name: dov-po
      labels: # pod labels
        app: dov
        name: dov-po
    spec:
      containers:
      - name: dov-container
        image: chukmunnlee/dov-bear:v5
        imagePullPolicy: IfNotPresent
        env: # environment variables
        # - name: INSTANCE_NAME
        #   value: dov pod
        - name: INSTANCE_HASH
          valueFrom:
            fieldRef:
              fieldPath: status.podIP # metadata.labels['app']
        envFrom:
        - configMapRef:
            name: dov-cm
        ports:
        - name: web-port
          containerPort: 3000
        - name: metrics-port
          containerPort: 3100
        livenessProbe:
          httpGet:
            path: /healthz
            port: web-port
          periodSeconds: 30
          initialDelaySeconds: 5
        resources:
          requests:
            cpu: 64m # guaranteed minimum
            memory: 48Mi # guaranteed minimum
          limits:
            cpu: 128m # maximum
            memory: 96Mi # maximums

        # if requests/ limits not specified, QoS class BestEffort
        # if requests/ limits specified, QoS class Burstable
        # if requests = limits, QoS class Guaranteed
        # Guaranteed pods highest priority, BestEffort lowest
        # If node is under memory pressure, kubelet will first evict BestEffort, then Burstable, finally Guaranteed

---
apiVersion: v1
kind: Service
metadata:
  name: dov-svc
  namespace: myns
  labels:
    app: dov
    name: dov-svc
spec:
  type: ClusterIP
  selector:
    app: dov
    name: dov-po
  ports:
  - name: svc-web-port # service web port (svc-web-port 5000) bound to pod web port (web-port)
    port: 5000
    targetPort: web-port
  - name: svc-metrics-port
    port: 5100
    targetPort: metrics-port

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dov-ing
  namespace: myns # must be same namespace as service
  labels:
    app: dov
    name: dov-ing
spec:
  ingressClassName: nginx # kubectl get ingressclass
  rules:
  - host: dov-163.47.11.104.nip.io
    http:
      paths:
      - path: / 
        pathType: Prefix
        backend:
          service:
            name: dov-svc
            port: 
              name: svc-web-port

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: dov-hpa
  namespace: myns
spec:
  minReplicas: 1
  maxReplicas: 4
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment # can only scale deployment, replica set or stateful set, cannot scale pod
    name: dov-deploy
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50 # percentage
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 50 # percentage